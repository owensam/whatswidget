!function(n){var t={};function r(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,t){if(1&t&&(n=r(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var o in n)r.d(e,o,function(t){return n[t]}.bind(null,o));return e},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.p="",r(r.s=5)}([function(n,t){n.exports='<div class="whtsc"> <div class="whtsm"></div> <a target="_blank" rel="nofollow" class="whatswidget-button"><img src="https://cdn.jsdelivr.net/gh/mascarell/whatswidget/assets/whatsapp.svg" alt="Whatsapp Icon"/></a> </div> '},function(n,t,r){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var r=function(n,t){var r=n[1]||"",e=n[3];if(!e)return r;if(t&&"function"==typeof btoa){var o=(s=e,A=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),"/*# ".concat(i," */")),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([o]).join("\n")}var s,A,i;return[r].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(n,r,e){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(e)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(o[s]=!0)}for(var A=0;A<n.length;A++){var i=[].concat(n[A]);e&&o[i[0]]||(r&&(i[2]?i[2]="".concat(r," and ").concat(i[2]):i[2]=r),t.push(i))}},t}},function(n,t,r){var e=r(3),o=r(4);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[n.i,o,""]]);var a={insert:"head",singleton:!1};e(o,a);n.exports=o.locals||{}},function(n,t,r){"use strict";var e,o=function(){return void 0===e&&(e=Boolean(window&&document&&document.all&&!window.atob)),e},a=function(){var n={};return function(t){if(void 0===n[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[t]=r}return n[t]}}(),s=[];function A(n){for(var t=-1,r=0;r<s.length;r++)if(s[r].identifier===n){t=r;break}return t}function i(n,t){for(var r={},e=[],o=0;o<n.length;o++){var a=n[o],i=t.base?a[0]+t.base:a[0],c=r[i]||0,l="".concat(i," ").concat(c);r[i]=c+1;var d=A(l),h={css:a[1],media:a[2],sourceMap:a[3]};-1!==d?(s[d].references++,s[d].updater(h)):s.push({identifier:l,updater:C(h,t),references:1}),e.push(l)}return e}function c(n){var t=document.createElement("style"),e=n.attributes||{};if(void 0===e.nonce){var o=r.nc;o&&(e.nonce=o)}if(Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),"function"==typeof n.insert)n.insert(t);else{var s=a(n.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(t)}return t}var l,d=(l=[],function(n,t){return l[n]=t,l.filter(Boolean).join("\n")});function h(n,t,r,e){var o=r?"":e.media?"@media ".concat(e.media," {").concat(e.css,"}"):e.css;if(n.styleSheet)n.styleSheet.cssText=d(t,o);else{var a=document.createTextNode(o),s=n.childNodes;s[t]&&n.removeChild(s[t]),s.length?n.insertBefore(a,s[t]):n.appendChild(a)}}function p(n,t,r){var e=r.css,o=r.media,a=r.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),a&&btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}var u=null,f=0;function C(n,t){var r,e,o;if(t.singleton){var a=f++;r=u||(u=c(t)),e=h.bind(null,r,a,!1),o=h.bind(null,r,a,!0)}else r=c(t),e=p.bind(null,r,t),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return e(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;e(n=t)}else o()}}n.exports=function(n,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=i(n=n||[],t);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var e=0;e<r.length;e++){var o=A(r[e]);s[o].references--}for(var a=i(n,t),c=0;c<r.length;c++){var l=A(r[c]);0===s[l].references&&(s[l].updater(),s.splice(l,1))}r=a}}}},function(n,t,r){"use strict";r.r(t);var e=r(1),o=r.n(e)()(!0);o.push([n.i,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap);"]),o.push([n.i,"/* Container */\r\n.whtsc{\r\n    position: fixed;\r\n    z-index: 10002;\r\n    bottom: 0; right: 0; left: auto; top: auto;\r\n    content: '';\r\n    padding: 12px;\r\n}\r\n\r\n/* Message above icon */\r\n.whtsc .whtsm{\r\n    position: relative;\r\n    font-size: 14px; background-color: #fff;\r\n\tfont-family: 'Open Sans', sans-serif;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n    padding: 15px 20px; padding-right: 30px;\r\n    border-radius: 8px;\r\n    color: #525252;\r\n    font-weight: 600;\r\n    margin-bottom: 12px;\r\n    max-width: 450px;\r\n    width: auto;\r\n\tdisplay: none;\r\n\tanimation-duration: .5s;\r\n\tanimation-fill-mode: both;\r\n\tanimation-delay: 1s;\r\n}\r\n\r\n/* Close button */\r\n.whtsc .whtsm span{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\twidth: 10px; \r\n\theight: 10px; \r\n\tright: 15px; \r\n\ttop: 15px; \r\n\tleft: auto; \r\n}\r\n.whtsc .whtsm span:hover{ cursor: pointer; }\r\n.whtsc .whtsm span::after{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\ttop: 0; \r\n\tleft: 0; \r\n\twidth: 10px; \r\n\theight: 2px; \r\n\tbackground-color: #979797; \r\n\ttransform: rotate(45deg); \r\n}\r\n.whtsc .whtsm span::before{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\ttop: 0; \r\n\tleft: 0; \r\n\twidth: 10px; \r\n\theight: 2px; \r\n\tbackground-color: #979797; \r\n\ttransform: rotate(-45deg); \r\n}\r\n\r\n/* Button */\r\n.whtsc .whatswidget-button{\r\n    content: '';\r\n    width: 48px; height: 48px;\r\n    position: relative;\r\n    float: right;\r\n    display: flex; justify-content: center; align-items: center;\r\n    transition: .1s linear;\r\n\tanimation-duration: .5s;\r\n\tanimation-fill-mode: both;\r\n}\r\n.whtsc .whatswidget-button::before{ \r\n    content: ''; position: absolute;\r\n    border-radius: 50%;\r\n    z-index: 10000;\r\n    width: 100%; height: 100%;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n}\r\n.whtsc .whatswidget-button img{ \r\n    z-index: 10001;\r\n    transition: .1s linear;\r\n    margin: 0 !important; padding: 0 !important;\r\n    max-width: 100%; \r\n}\r\n.whtsc .whatswidget-button:hover img{\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n}\r\n\r\n/* POSITION THE WIDGET TO THE LEFT */\r\n.whtsc.left{ left: 0; width: auto; right: initial; }\r\n.whtsc.left .whatswidget-button{ float: left; }\r\n\r\n/* SHOW WIDGET ON MOBILES DIVICES */\r\n.whtsc.show-message-always .whtsm{ display: block; }\r\n\r\n/* Dark theme */\r\n.whtsc.dark .whtsm{\r\n    font-size: 14px; background-color: #081131;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n    color: #eeeeee;\r\n}\r\n.whtsc.dark .whatswidget-button::before{ \r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n}\r\n.whtsc.dark .whtsm span::after{ \r\n\tbackground-color: #e2e2e2; \r\n}\r\n.whtsc.dark .whtsm span::before{ \r\n\tbackground-color: #e2e2e2; \r\n}\r\n\r\n/* Tablets */\r\n@media only screen and (min-width : 768px) \r\n{\r\n    .whtsc .whtsm span{ right: 10px;}\r\n    .whtsc .whtsm{ display: block; }\r\n}\r\n\r\n@keyframes zoomIn {\r\n    from {\r\n        transform: scale(.2);\r\n        opacity: 0;\r\n    }\r\n}\r\n@keyframes slide {\r\n    from {\r\n        transform: translateY(20px);\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n/* Classes for animations */\r\n.zoomIn { animation-name: zoomIn; }\r\n.slide { animation-name: slide; }","",{version:3,sources:["webpack://src/views/message.css"],names:[],mappings:"AAEA,cAAc;AACd;IACI,eAAe;IACf,cAAc;IACd,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS;IAC1C,WAAW;IACX,aAAa;AACjB;;AAEA,uBAAuB;AACvB;IACI,kBAAkB;IAClB,eAAe,EAAE,sBAAsB;CAC1C,oCAAoC;IACjC,0CAA0C;IAC1C,kBAAkB,EAAE,mBAAmB;IACvC,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;CACd,aAAa;CACb,uBAAuB;CACvB,yBAAyB;CACzB,mBAAmB;AACpB;;AAEA,iBAAiB;AACjB;CACC,WAAW;CACX,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,WAAW;CACX,SAAS;CACT,UAAU;AACX;AACA,0BAA0B,eAAe,EAAE;AAC3C;CACC,WAAW;CACX,kBAAkB;CAClB,MAAM;CACN,OAAO;CACP,WAAW;CACX,WAAW;CACX,yBAAyB;CACzB,wBAAwB;AACzB;AACA;CACC,WAAW;CACX,kBAAkB;CAClB,MAAM;CACN,OAAO;CACP,WAAW;CACX,WAAW;CACX,yBAAyB;CACzB,yBAAyB;AAC1B;;AAEA,WAAW;AACX;IACI,WAAW;IACX,WAAW,EAAE,YAAY;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa,EAAE,uBAAuB,EAAE,mBAAmB;IAC3D,sBAAsB;CACzB,uBAAuB;CACvB,yBAAyB;AAC1B;AACA;IACI,WAAW,EAAE,kBAAkB;IAC/B,kBAAkB;IAClB,cAAc;IACd,WAAW,EAAE,YAAY;IACzB,0CAA0C;AAC9C;AACA;IACI,cAAc;IACd,sBAAsB;IACtB,oBAAoB,EAAE,qBAAqB;IAC3C,eAAe;AACnB;AACA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA,oCAAoC;AACpC,aAAa,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE;AACnD,iCAAiC,WAAW,EAAE;;AAE9C,mCAAmC;AACnC,mCAAmC,cAAc,EAAE;;AAEnD,eAAe;AACf;IACI,eAAe,EAAE,yBAAyB;IAC1C,0CAA0C;IAC1C,cAAc;AAClB;AACA;IACI,0CAA0C;AAC9C;AACA;CACC,yBAAyB;AAC1B;AACA;CACC,yBAAyB;AAC1B;;AAEA,YAAY;AACZ;;IAEI,oBAAoB,WAAW,CAAC;IAChC,eAAe,cAAc,EAAE;AACnC;;AAEA;IACI;QACI,oBAAoB;QACpB,UAAU;IACd;AACJ;AACA;IACI;QACI,2BAA2B;QAC3B,UAAU;IACd;AACJ;;AAEA,2BAA2B;AAC3B,UAAU,sBAAsB,EAAE;AAClC,SAAS,qBAAqB,EAAE",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap');\r\n\r\n/* Container */\r\n.whtsc{\r\n    position: fixed;\r\n    z-index: 10002;\r\n    bottom: 0; right: 0; left: auto; top: auto;\r\n    content: '';\r\n    padding: 12px;\r\n}\r\n\r\n/* Message above icon */\r\n.whtsc .whtsm{\r\n    position: relative;\r\n    font-size: 14px; background-color: #fff;\r\n\tfont-family: 'Open Sans', sans-serif;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n    padding: 15px 20px; padding-right: 30px;\r\n    border-radius: 8px;\r\n    color: #525252;\r\n    font-weight: 600;\r\n    margin-bottom: 12px;\r\n    max-width: 450px;\r\n    width: auto;\r\n\tdisplay: none;\r\n\tanimation-duration: .5s;\r\n\tanimation-fill-mode: both;\r\n\tanimation-delay: 1s;\r\n}\r\n\r\n/* Close button */\r\n.whtsc .whtsm span{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\twidth: 10px; \r\n\theight: 10px; \r\n\tright: 15px; \r\n\ttop: 15px; \r\n\tleft: auto; \r\n}\r\n.whtsc .whtsm span:hover{ cursor: pointer; }\r\n.whtsc .whtsm span::after{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\ttop: 0; \r\n\tleft: 0; \r\n\twidth: 10px; \r\n\theight: 2px; \r\n\tbackground-color: #979797; \r\n\ttransform: rotate(45deg); \r\n}\r\n.whtsc .whtsm span::before{ \r\n\tcontent: ''; \r\n\tposition: absolute; \r\n\ttop: 0; \r\n\tleft: 0; \r\n\twidth: 10px; \r\n\theight: 2px; \r\n\tbackground-color: #979797; \r\n\ttransform: rotate(-45deg); \r\n}\r\n\r\n/* Button */\r\n.whtsc .whatswidget-button{\r\n    content: '';\r\n    width: 48px; height: 48px;\r\n    position: relative;\r\n    float: right;\r\n    display: flex; justify-content: center; align-items: center;\r\n    transition: .1s linear;\r\n\tanimation-duration: .5s;\r\n\tanimation-fill-mode: both;\r\n}\r\n.whtsc .whatswidget-button::before{ \r\n    content: ''; position: absolute;\r\n    border-radius: 50%;\r\n    z-index: 10000;\r\n    width: 100%; height: 100%;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n}\r\n.whtsc .whatswidget-button img{ \r\n    z-index: 10001;\r\n    transition: .1s linear;\r\n    margin: 0 !important; padding: 0 !important;\r\n    max-width: 100%; \r\n}\r\n.whtsc .whatswidget-button:hover img{\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n}\r\n\r\n/* POSITION THE WIDGET TO THE LEFT */\r\n.whtsc.left{ left: 0; width: auto; right: initial; }\r\n.whtsc.left .whatswidget-button{ float: left; }\r\n\r\n/* SHOW WIDGET ON MOBILES DIVICES */\r\n.whtsc.show-message-always .whtsm{ display: block; }\r\n\r\n/* Dark theme */\r\n.whtsc.dark .whtsm{\r\n    font-size: 14px; background-color: #081131;\r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n    color: #eeeeee;\r\n}\r\n.whtsc.dark .whatswidget-button::before{ \r\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\r\n}\r\n.whtsc.dark .whtsm span::after{ \r\n\tbackground-color: #e2e2e2; \r\n}\r\n.whtsc.dark .whtsm span::before{ \r\n\tbackground-color: #e2e2e2; \r\n}\r\n\r\n/* Tablets */\r\n@media only screen and (min-width : 768px) \r\n{\r\n    .whtsc .whtsm span{ right: 10px;}\r\n    .whtsc .whtsm{ display: block; }\r\n}\r\n\r\n@keyframes zoomIn {\r\n    from {\r\n        transform: scale(.2);\r\n        opacity: 0;\r\n    }\r\n}\r\n@keyframes slide {\r\n    from {\r\n        transform: translateY(20px);\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n/* Classes for animations */\r\n.zoomIn { animation-name: zoomIn; }\r\n.slide { animation-name: slide; }"],sourceRoot:""}]),t.default=o},function(n,t,r){"use strict";r.r(t);var e=r(0),o=r.n(e),a=(r(2),document.createElement("div"));a.innerHTML=o.a;var s=a.querySelector(".whtsc");function A(n){if(n.useAnimations&&(s.querySelector(".whtsm").classList.add("slide"),s.querySelector(".whatswidget-button").classList.add("zoomIn")),n.useDarkTheme&&s.classList.add("dark"),n.message?n.useCookies&&null==document.cookie.match(/^(.*;)?\s*showmessage\s*=\s*[^;]+(.*)?$/)?(s.querySelector(".whtsm").innerHTML="".concat(n.message," <span></span>"),s.querySelector(".whtsm span").addEventListener("click",i),function(n,t,r){var e,o;console.log("creating cookie"),r?((e=new Date).setTime(e.getTime()+24*r*60*60*1e3),o="; expires="+e.toGMTString()):o="";document.cookie=n+"="+t+o+"; path=/"}("showmessage","no",3)):n.useCookies?s.querySelector(".whtsm").remove():(s.querySelector(".whtsm").innerHTML="".concat(n.message," <span></span>"),s.querySelector(".whtsm span").addEventListener("click",i)):s.querySelector(".whtsm").remove(),n.phone)try{var t=n.phone[Math.floor(Math.random()*n.phone.length)];s.querySelector(".whatswidget-button").href="https://wa.me/".concat(t)}catch(n){console.error("whatswidget -> cannot select phone number")}n.floatLeft&&s.classList.add("left"),n.showMessageAlways&&s.classList.add("show-message-always"),document.getElementsByTagName("body")[0].appendChild(s)}function i(){s.querySelector(".whtsm").style.display="none"}var c=["config"];function l(n,t){if(!n)throw Error("API method required");if(n=n.toLowerCase(),-1===c.indexOf(n))throw Error("Method ".concat(n," is not supported"));switch(n){case"config":A(t);break;default:console.warn("No handler defined for ".concat(n))}}!function(n){var t=n[n.ww],r=t.q;if(r)for(var e=0;e<r.length;e++)l(r[e][0],r[e][1]);(t=l).configurations={message:!1,phone:!1,floatLeft:!1,showMessageAlways:!1,useCookies:!1,useAnimations:!1,useDarkTheme:!1}}(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,