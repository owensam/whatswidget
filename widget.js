!function(t){var n={};function e(o){if(n[o])return n[o].exports;var a=n[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var a in t)e.d(o,a,function(n){return t[n]}.bind(null,a));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=5)}([function(t,n){t.exports='<div class="whtsc"> <div class="whtsm"></div> <a target="_blank" rel="nofollow" class="whatswidget-button"><img src="https://cdn.jsdelivr.net/gh/mascarell/whatswidget/assets/whatsapp.svg" alt="Whatsapp Icon"/></a> </div> '},function(t,n,e){"use strict";t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e=function(t,n){var e=t[1]||"",o=t[3];if(!o)return e;if(n&&"function"==typeof btoa){var a=(s=o,i=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),"/*# ".concat(A," */")),r=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([a]).join("\n")}var s,i,A;return[e].join("\n")}(n,t);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(t,e,o){"string"==typeof t&&(t=[[null,t,""]]);var a={};if(o)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(a[s]=!0)}for(var i=0;i<t.length;i++){var A=[].concat(t[i]);o&&a[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),n.push(A))}},n}},function(t,n,e){var o=e(3),a=e(4);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[t.i,a,""]]);var r={insert:"head",singleton:!1};o(a,r);t.exports=a.locals||{}},function(t,n,e){"use strict";var o,a=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},r=function(){var t={};return function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}t[n]=e}return t[n]}}(),s=[];function i(t){for(var n=-1,e=0;e<s.length;e++)if(s[e].identifier===t){n=e;break}return n}function A(t,n){for(var e={},o=[],a=0;a<t.length;a++){var r=t[a],A=n.base?r[0]+n.base:r[0],c=e[A]||0,l="".concat(A," ").concat(c);e[A]=c+1;var p=i(l),d={css:r[1],media:r[2],sourceMap:r[3]};-1!==p?(s[p].references++,s[p].updater(d)):s.push({identifier:l,updater:w(d,n),references:1}),o.push(l)}return o}function c(t){var n=document.createElement("style"),o=t.attributes||{};if(void 0===o.nonce){var a=e.nc;a&&(o.nonce=a)}if(Object.keys(o).forEach((function(t){n.setAttribute(t,o[t])})),"function"==typeof t.insert)t.insert(n);else{var s=r(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}return n}var l,p=(l=[],function(t,n){return l[t]=n,l.filter(Boolean).join("\n")});function d(t,n,e,o){var a=e?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet)t.styleSheet.cssText=p(n,a);else{var r=document.createTextNode(a),s=t.childNodes;s[n]&&t.removeChild(s[n]),s.length?t.insertBefore(r,s[n]):t.appendChild(r)}}function u(t,n,e){var o=e.css,a=e.media,r=e.sourceMap;if(a?t.setAttribute("media",a):t.removeAttribute("media"),r&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var h=null,f=0;function w(t,n){var e,o,a;if(n.singleton){var r=f++;e=h||(h=c(n)),o=d.bind(null,e,r,!1),a=d.bind(null,e,r,!0)}else e=c(n),o=u.bind(null,e,n),a=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)};return o(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;o(t=n)}else a()}}t.exports=function(t,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=a());var e=A(t=t||[],n);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var o=0;o<e.length;o++){var a=i(e[o]);s[a].references--}for(var r=A(t,n),c=0;c<e.length;c++){var l=i(e[c]);0===s[l].references&&(s[l].updater(),s.splice(l,1))}e=r}}}},function(t,n,e){"use strict";e.r(n);var o=e(1),a=e.n(o)()(!0);a.push([t.i,"@import url(https://fonts.googleapis.com/css?family=Darker+Grotesque&display=swap);"]),a.push([t.i,".whtsc{\n    position: fixed;\n    z-index: 10002;\n    bottom: 0; right: 0; left: auto; top: auto;\n    content: '';\n    font-family: Verdana, Geneva, sans-serif;\n    padding: 12px;\n}\n.whtsc .whtsm{\n    position: relative;\n    font-size: 16px; background-color: #f7f7f7;\n    letter-spacing: 1px;\n    font-family: 'Darker Grotesque', sans-serif;\n    box-shadow: 2px 2px 10px 5px #dadada;\n    padding: 10px 20px; padding-right: 30px;\n    border-radius: 8px;\n    color: #525252;\n    font-weight: 600;\n    margin-bottom: 12px;\n    max-width: 450px;\n    width: auto;\n    display: none;\n}\n.whtsc .whtsm span{ content: ''; position: absolute; width: 15px; height: 15px; right: 15px; top: 15px; left: auto; }\n.whtsc .whtsm span:hover{ cursor: pointer; }\n.whtsc .whtsm span::after{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(45deg); }\n.whtsc .whtsm span::before{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(-45deg); }\n.whtsc .whatswidget-button{\n    content: '';\n    width: 48px; height: 48px;\n    position: relative;\n    float: right;\n    display: flex; justify-content: center; align-items: center;\n    transition: .1s linear;\n    /* background-color: #25D366; */\n}\n.whtsc .whatswidget-button::before{ \n    content: ''; position: absolute;\n    border-radius: 50%;\n    z-index: 10000;\n    width: 100%; height: 100%;\n    box-shadow: 2px 2px 10px 5px #dadada;\n}\n.whtsc .whatswidget-button img{ \n    z-index: 10001;\n    transition: .1s linear;\n    margin: 0 !important; padding: 0 !important;\n    max-width: 100%; \n}\n.whtsc .whatswidget-button:hover img{\n    cursor: pointer;\n    transform: scale(1.1);\n}\n\n/* POSITION THE WIDGET TO THE LEFT */\n.whtsc.left{ left: 0; width: auto; right: initial; }\n.whtsc.left .whatswidget-button{ float: left; }\n\n/* SHOW WIDGET ON MOBILES DIVICES */\n.whtsc.show-message-always .whtsm{ display: block; }\n\n/* Tablets */\n@media only screen and (min-width : 768px) \n{\n    .whtsc .whtsm span{ right: 10px;}\n    .whtsc .whtsm{ display: block; }\n}","",{version:3,sources:["webpack://src/views/message.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,cAAc;IACd,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS;IAC1C,WAAW;IACX,wCAAwC;IACxC,aAAa;AACjB;AACA;IACI,kBAAkB;IAClB,eAAe,EAAE,yBAAyB;IAC1C,mBAAmB;IACnB,2CAA2C;IAC3C,oCAAoC;IACpC,kBAAkB,EAAE,mBAAmB;IACvC,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,aAAa;AACjB;AACA,oBAAoB,WAAW,EAAE,kBAAkB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE;AACpH,0BAA0B,eAAe,EAAE;AAC3C,2BAA2B,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,yBAAyB,EAAE,wBAAwB,EAAE;AAC9J,4BAA4B,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,yBAAyB,EAAE,yBAAyB,EAAE;AAChK;IACI,WAAW;IACX,WAAW,EAAE,YAAY;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa,EAAE,uBAAuB,EAAE,mBAAmB;IAC3D,sBAAsB;IACtB,+BAA+B;AACnC;AACA;IACI,WAAW,EAAE,kBAAkB;IAC/B,kBAAkB;IAClB,cAAc;IACd,WAAW,EAAE,YAAY;IACzB,oCAAoC;AACxC;AACA;IACI,cAAc;IACd,sBAAsB;IACtB,oBAAoB,EAAE,qBAAqB;IAC3C,eAAe;AACnB;AACA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA,oCAAoC;AACpC,aAAa,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE;AACnD,iCAAiC,WAAW,EAAE;;AAE9C,mCAAmC;AACnC,mCAAmC,cAAc,EAAE;;AAEnD,YAAY;AACZ;;IAEI,oBAAoB,WAAW,CAAC;IAChC,eAAe,cAAc,EAAE;AACnC",sourcesContent:["@import url('https://fonts.googleapis.com/css?family=Darker+Grotesque&display=swap');\n\n.whtsc{\n    position: fixed;\n    z-index: 10002;\n    bottom: 0; right: 0; left: auto; top: auto;\n    content: '';\n    font-family: Verdana, Geneva, sans-serif;\n    padding: 12px;\n}\n.whtsc .whtsm{\n    position: relative;\n    font-size: 16px; background-color: #f7f7f7;\n    letter-spacing: 1px;\n    font-family: 'Darker Grotesque', sans-serif;\n    box-shadow: 2px 2px 10px 5px #dadada;\n    padding: 10px 20px; padding-right: 30px;\n    border-radius: 8px;\n    color: #525252;\n    font-weight: 600;\n    margin-bottom: 12px;\n    max-width: 450px;\n    width: auto;\n    display: none;\n}\n.whtsc .whtsm span{ content: ''; position: absolute; width: 15px; height: 15px; right: 15px; top: 15px; left: auto; }\n.whtsc .whtsm span:hover{ cursor: pointer; }\n.whtsc .whtsm span::after{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(45deg); }\n.whtsc .whtsm span::before{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(-45deg); }\n.whtsc .whatswidget-button{\n    content: '';\n    width: 48px; height: 48px;\n    position: relative;\n    float: right;\n    display: flex; justify-content: center; align-items: center;\n    transition: .1s linear;\n    /* background-color: #25D366; */\n}\n.whtsc .whatswidget-button::before{ \n    content: ''; position: absolute;\n    border-radius: 50%;\n    z-index: 10000;\n    width: 100%; height: 100%;\n    box-shadow: 2px 2px 10px 5px #dadada;\n}\n.whtsc .whatswidget-button img{ \n    z-index: 10001;\n    transition: .1s linear;\n    margin: 0 !important; padding: 0 !important;\n    max-width: 100%; \n}\n.whtsc .whatswidget-button:hover img{\n    cursor: pointer;\n    transform: scale(1.1);\n}\n\n/* POSITION THE WIDGET TO THE LEFT */\n.whtsc.left{ left: 0; width: auto; right: initial; }\n.whtsc.left .whatswidget-button{ float: left; }\n\n/* SHOW WIDGET ON MOBILES DIVICES */\n.whtsc.show-message-always .whtsm{ display: block; }\n\n/* Tablets */\n@media only screen and (min-width : 768px) \n{\n    .whtsc .whtsm span{ right: 10px;}\n    .whtsc .whtsm{ display: block; }\n}"],sourceRoot:""}]),n.default=a},function(t,n,e){"use strict";e.r(n);var o=e(0),a=e.n(o),r=(e(2),document.createElement("div"));r.innerHTML=a.a;var s=r.querySelector(".whtsc");function i(t){t.message?t.useCookies&&null==document.cookie.match(/^(.*;)?\s*showmessage\s*=\s*[^;]+(.*)?$/)?(s.querySelector(".whtsm").innerHTML="".concat(t.message," <span></span>"),s.querySelector(".whtsm span").addEventListener("click",A),function(t,n,e){var o,a;console.log("creating cookie"),e?((o=new Date).setTime(o.getTime()+24*e*60*60*1e3),a="; expires="+o.toGMTString()):a="";document.cookie=t+"="+n+a+"; path=/"}("showmessage","no",7)):t.useCookies?s.querySelector(".whtsm").remove():(s.querySelector(".whtsm").innerHTML="".concat(t.message," <span></span>"),s.querySelector(".whtsm span").addEventListener("click",A)):s.querySelector(".whtsm").remove(),t.phone&&(s.querySelector(".whatswidget-button").href="https://api.whatsapp.com/send?phone=".concat(t.phone)),t.floatLeft&&s.classList.add("left"),t.showMessageAlways&&s.classList.add("show-message-always"),document.getElementsByTagName("body")[0].appendChild(s)}function A(){s.querySelector(".whtsm").style.display="none"}var c=["config"];function l(t,n){if(!t)throw Error("API method required");if(t=t.toLowerCase(),-1===c.indexOf(t))throw Error("Method ".concat(t," is not supported"));switch(t){case"config":i(n);break;default:console.warn("No handler defined for ".concat(t))}}!function(t){var n=t[t.ww],e=n.q;if(e)for(var o=0;o<e.length;o++)l(e[o][0],e[o][1]);(n=l).configurations={message:!1,phone:!1,floatLeft:!1,showMessageAlways:!1,useCookies:!1}}(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,