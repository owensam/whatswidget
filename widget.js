!function(n){var t={};function e(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return n[o].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var a in n)e.d(o,a,function(t){return n[t]}.bind(null,a));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=5)}([function(n,t){n.exports='<div class="whtsc"> <div class="whtsm"></div> <a target="_blank" rel="nofollow" class="whatswidget-button"><img src="https://cdn.jsdelivr.net/gh/mascarell/whatswidget/assets/whatsapp.svg" alt="Whatsapp Icon"/></a> </div> '},function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=function(n,t){var e=n[1]||"",o=n[3];if(!o)return e;if(t&&"function"==typeof btoa){var a=(r=o,s=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(A," */")),i=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}var r,s,A;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,o){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(o)for(var i=0;i<this.length;i++){var r=this[i][0];null!=r&&(a[r]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);o&&a[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),t.push(A))}},t}},function(n,t,e){var o=e(3),a=e(4);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.i,a,""]]);var i={insert:"head",singleton:!1};o(a,i);n.exports=a.locals||{}},function(n,t,e){"use strict";var o,a=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}(),r=[];function s(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function A(n,t){for(var e={},o=[],a=0;a<n.length;a++){var i=n[a],A=t.base?i[0]+t.base:i[0],c=e[A]||0,l="".concat(A," ").concat(c);e[A]=c+1;var d=s(l),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==d?(r[d].references++,r[d].updater(p)):r.push({identifier:l,updater:m(p,t),references:1}),o.push(l)}return o}function c(n){var t=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var a=e.nc;a&&(o.nonce=a)}if(Object.keys(o).forEach((function(n){t.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(t);else{var r=i(n.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}return t}var l,d=(l=[],function(n,t){return l[n]=t,l.filter(Boolean).join("\n")});function p(n,t,e,o){var a=e?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=d(t,a);else{var i=document.createTextNode(a),r=n.childNodes;r[t]&&n.removeChild(r[t]),r.length?n.insertBefore(i,r[t]):n.appendChild(i)}}function u(n,t,e){var o=e.css,a=e.media,i=e.sourceMap;if(a?n.setAttribute("media",a):n.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var h=null,f=0;function m(n,t){var e,o,a;if(t.singleton){var i=f++;e=h||(h=c(t)),o=p.bind(null,e,i,!1),a=p.bind(null,e,i,!0)}else e=c(t),o=u.bind(null,e,t),a=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return o(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;o(n=t)}else a()}}n.exports=function(n,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=a());var e=A(n=n||[],t);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<e.length;o++){var a=s(e[o]);r[a].references--}for(var i=A(n,t),c=0;c<e.length;c++){var l=s(e[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}e=i}}}},function(n,t,e){"use strict";e.r(t);var o=e(1),a=e.n(o)()(!0);a.push([n.i,"@import url(https://fonts.googleapis.com/css?family=Darker+Grotesque&display=swap);"]),a.push([n.i,".whtsc{\n    position: fixed;\n    z-index: 10002;\n    bottom: 0; right: 0; left: auto; top: auto;\n    content: '';\n    font-family: Verdana, Geneva, sans-serif;\n    padding: 12px;\n}\n.whtsc .whtsm{\n    position: relative;\n    font-size: 18px; background-color: #f7f7f7;\n    letter-spacing: 1px;\n    font-family: 'Darker Grotesque', sans-serif;\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\n    padding: 10px 20px; padding-right: 30px;\n    border-radius: 8px;\n    color: #525252;\n    font-weight: 600;\n    margin-bottom: 12px;\n    max-width: 450px;\n    width: auto;\n\tdisplay: none;\n\tanimation-duration: .5s;\n\tanimation-fill-mode: both;\n\tanimation-name: slide;\n\tanimation-delay: 1s;\n}\n.whtsc .whtsm span{ content: ''; position: absolute; width: 15px; height: 15px; right: 15px; top: 15px; left: auto; }\n.whtsc .whtsm span:hover{ cursor: pointer; }\n.whtsc .whtsm span::after{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(45deg); }\n.whtsc .whtsm span::before{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(-45deg); }\n.whtsc .whatswidget-button{\n    content: '';\n    width: 48px; height: 48px;\n    position: relative;\n    float: right;\n    display: flex; justify-content: center; align-items: center;\n    transition: .1s linear;\n\t/* background-color: #25D366; */\n\tanimation-duration: .5s;\n\tanimation-fill-mode: both;\n\tanimation-name: zoomIn;\n}\n.whtsc .whatswidget-button::before{ \n    content: ''; position: absolute;\n    border-radius: 50%;\n    z-index: 10000;\n    width: 100%; height: 100%;\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\n}\n.whtsc .whatswidget-button img{ \n    z-index: 10001;\n    transition: .1s linear;\n    margin: 0 !important; padding: 0 !important;\n    max-width: 100%; \n}\n.whtsc .whatswidget-button:hover img{\n    cursor: pointer;\n    transform: scale(1.1);\n}\n\n/* POSITION THE WIDGET TO THE LEFT */\n.whtsc.left{ left: 0; width: auto; right: initial; }\n.whtsc.left .whatswidget-button{ float: left; }\n\n/* SHOW WIDGET ON MOBILES DIVICES */\n.whtsc.show-message-always .whtsm{ display: block; }\n\n/* Tablets */\n@media only screen and (min-width : 768px) \n{\n    .whtsc .whtsm span{ right: 10px;}\n    .whtsc .whtsm{ display: block; }\n}\n\n@keyframes zoomIn {\n    from {\n        transform: scale(.2);\n        opacity: 0;\n    }\n}\n@keyframes slide {\n    from {\n        transform: translateY(20px);\n        opacity: 0;\n    }\n}","",{version:3,sources:["webpack://src/views/message.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,cAAc;IACd,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS;IAC1C,WAAW;IACX,wCAAwC;IACxC,aAAa;AACjB;AACA;IACI,kBAAkB;IAClB,eAAe,EAAE,yBAAyB;IAC1C,mBAAmB;IACnB,2CAA2C;IAC3C,0CAA0C;IAC1C,kBAAkB,EAAE,mBAAmB;IACvC,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;CACd,aAAa;CACb,uBAAuB;CACvB,yBAAyB;CACzB,qBAAqB;CACrB,mBAAmB;AACpB;AACA,oBAAoB,WAAW,EAAE,kBAAkB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE;AACpH,0BAA0B,eAAe,EAAE;AAC3C,2BAA2B,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,yBAAyB,EAAE,wBAAwB,EAAE;AAC9J,4BAA4B,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,yBAAyB,EAAE,yBAAyB,EAAE;AAChK;IACI,WAAW;IACX,WAAW,EAAE,YAAY;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa,EAAE,uBAAuB,EAAE,mBAAmB;IAC3D,sBAAsB;CACzB,+BAA+B;CAC/B,uBAAuB;CACvB,yBAAyB;CACzB,sBAAsB;AACvB;AACA;IACI,WAAW,EAAE,kBAAkB;IAC/B,kBAAkB;IAClB,cAAc;IACd,WAAW,EAAE,YAAY;IACzB,0CAA0C;AAC9C;AACA;IACI,cAAc;IACd,sBAAsB;IACtB,oBAAoB,EAAE,qBAAqB;IAC3C,eAAe;AACnB;AACA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA,oCAAoC;AACpC,aAAa,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE;AACnD,iCAAiC,WAAW,EAAE;;AAE9C,mCAAmC;AACnC,mCAAmC,cAAc,EAAE;;AAEnD,YAAY;AACZ;;IAEI,oBAAoB,WAAW,CAAC;IAChC,eAAe,cAAc,EAAE;AACnC;;AAEA;IACI;QACI,oBAAoB;QACpB,UAAU;IACd;AACJ;AACA;IACI;QACI,2BAA2B;QAC3B,UAAU;IACd;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css?family=Darker+Grotesque&display=swap');\n\n.whtsc{\n    position: fixed;\n    z-index: 10002;\n    bottom: 0; right: 0; left: auto; top: auto;\n    content: '';\n    font-family: Verdana, Geneva, sans-serif;\n    padding: 12px;\n}\n.whtsc .whtsm{\n    position: relative;\n    font-size: 18px; background-color: #f7f7f7;\n    letter-spacing: 1px;\n    font-family: 'Darker Grotesque', sans-serif;\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\n    padding: 10px 20px; padding-right: 30px;\n    border-radius: 8px;\n    color: #525252;\n    font-weight: 600;\n    margin-bottom: 12px;\n    max-width: 450px;\n    width: auto;\n\tdisplay: none;\n\tanimation-duration: .5s;\n\tanimation-fill-mode: both;\n\tanimation-name: slide;\n\tanimation-delay: 1s;\n}\n.whtsc .whtsm span{ content: ''; position: absolute; width: 15px; height: 15px; right: 15px; top: 15px; left: auto; }\n.whtsc .whtsm span:hover{ cursor: pointer; }\n.whtsc .whtsm span::after{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(45deg); }\n.whtsc .whtsm span::before{ content: ''; position: absolute; top: 8px; left: 0; width: 10px; height: 2px; background-color: #979797; transform: rotate(-45deg); }\n.whtsc .whatswidget-button{\n    content: '';\n    width: 48px; height: 48px;\n    position: relative;\n    float: right;\n    display: flex; justify-content: center; align-items: center;\n    transition: .1s linear;\n\t/* background-color: #25D366; */\n\tanimation-duration: .5s;\n\tanimation-fill-mode: both;\n\tanimation-name: zoomIn;\n}\n.whtsc .whatswidget-button::before{ \n    content: ''; position: absolute;\n    border-radius: 50%;\n    z-index: 10000;\n    width: 100%; height: 100%;\n    box-shadow: 1px 2px 8px rgba(70,70,70,.25);\n}\n.whtsc .whatswidget-button img{ \n    z-index: 10001;\n    transition: .1s linear;\n    margin: 0 !important; padding: 0 !important;\n    max-width: 100%; \n}\n.whtsc .whatswidget-button:hover img{\n    cursor: pointer;\n    transform: scale(1.1);\n}\n\n/* POSITION THE WIDGET TO THE LEFT */\n.whtsc.left{ left: 0; width: auto; right: initial; }\n.whtsc.left .whatswidget-button{ float: left; }\n\n/* SHOW WIDGET ON MOBILES DIVICES */\n.whtsc.show-message-always .whtsm{ display: block; }\n\n/* Tablets */\n@media only screen and (min-width : 768px) \n{\n    .whtsc .whtsm span{ right: 10px;}\n    .whtsc .whtsm{ display: block; }\n}\n\n@keyframes zoomIn {\n    from {\n        transform: scale(.2);\n        opacity: 0;\n    }\n}\n@keyframes slide {\n    from {\n        transform: translateY(20px);\n        opacity: 0;\n    }\n}"],sourceRoot:""}]),t.default=a},function(n,t,e){"use strict";e.r(t);var o=e(0),a=e.n(o),i=(e(2),document.createElement("div"));i.innerHTML=a.a;var r=i.querySelector(".whtsc");function s(n){if(n.message?n.useCookies&&null==document.cookie.match(/^(.*;)?\s*showmessage\s*=\s*[^;]+(.*)?$/)?(r.querySelector(".whtsm").innerHTML="".concat(n.message," <span></span>"),r.querySelector(".whtsm span").addEventListener("click",A),function(n,t,e){var o,a;console.log("creating cookie"),e?((o=new Date).setTime(o.getTime()+24*e*60*60*1e3),a="; expires="+o.toGMTString()):a="";document.cookie=n+"="+t+a+"; path=/"}("showmessage","no",1)):n.useCookies?r.querySelector(".whtsm").remove():(r.querySelector(".whtsm").innerHTML="".concat(n.message," <span></span>"),r.querySelector(".whtsm span").addEventListener("click",A)):r.querySelector(".whtsm").remove(),n.phone)try{var t=n.phone[Math.floor(Math.random()*n.phone.length)];r.querySelector(".whatswidget-button").href="https://api.whatsapp.com/send?phone=".concat(t)}catch(n){console.error("whatswidget -> cannot select phone number")}n.floatLeft&&r.classList.add("left"),n.showMessageAlways&&r.classList.add("show-message-always"),document.getElementsByTagName("body")[0].appendChild(r)}function A(){r.querySelector(".whtsm").style.display="none"}var c=["config"];function l(n,t){if(!n)throw Error("API method required");if(n=n.toLowerCase(),-1===c.indexOf(n))throw Error("Method ".concat(n," is not supported"));switch(n){case"config":s(t);break;default:console.warn("No handler defined for ".concat(n))}}!function(n){var t=n[n.ww],e=t.q;if(e)for(var o=0;o<e.length;o++)l(e[o][0],e[o][1]);(t=l).configurations={message:!1,phone:!1,floatLeft:!1,showMessageAlways:!1,useCookies:!1}}(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,